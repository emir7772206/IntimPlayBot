from aiogram import Bot, Dispatcher, types, executor
import logging, os, random

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

tasks = {
    "‚ù§Ô∏è –õ—ë–≥–∫–∏–π": [
        "–ü–æ—Ü–µ–ª—É–π –≤ —à–µ—é‚Ä¶ –º–µ–¥–ª–µ–Ω–Ω–æ –∏ —à—ë–ø–æ—Ç–æ–º.",
        "–û–±–Ω–∏–º–∏ —Å–∑–∞–¥–∏ –∏ –ø—Ä–æ—à–µ–ø—á–∏ –∂–µ–ª–∞–Ω–∏–µ.",
        "–ü–æ–≥–ª–∞–¥—å –≤–æ–ª–æ—Å—ã —Å —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é."
    ],
    "üî• –ö–æ–Ω—Ç—Ä–æ–ª—å": [
        "–ü—Ä–∏–∫–∞–∂–∏ –≤—Å—Ç–∞—Ç—å –Ω–∞ –∫–æ–ª–µ–Ω–∏ –∏ —à—ë–ø–æ—Ç–æ–º –ø—Ä–æ–≤–µ–¥–∏ —Ä—É–∫–æ–π.",
        "–ó–∞–≤—è–∂–∏ –µ–π –≥–ª–∞–∑–∞ —à–∞—Ä—Ñ–æ–º –∏ –º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ–¥–∏ –ø–æ —Ç–µ–ª—É.",
        "–°–∫–∞–∂–∏: ¬´–õ—è–≥¬ª. –ú–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞–∑–¥–µ–≤–∞–π –∏ –Ω–∞–±–ª—é–¥–∞–π."
    ],
    "üòà –ü—Ä–µ–¥–µ–ª": [
        "–¢—ã ‚Äî –¥–æ–ø—Ä–æ—Å—á–∏–∫: —Å–≤—è–∂–∏ –µ–π —Ä—É–∫–∏, —Å–ø—Ä–æ—Å–∏ —Ç–∞–π–Ω—É –ø–ª—ë—Ç–∫–æ–π.",
        "–ó–∞–ø—Ä–µ—Ç–∏ –¥–≤–∏–≥–∞—Ç—å—Å—è ‚Äî —Ç—ã —Ä–µ—à–∞–µ—à—å –≤—Ä–µ–º—è –∏ –ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏—è.",
        "–ù–µ –ø—Ä–∏–∫–∞—Å–∞–π—Å—è ‚Äî –ø—É—Å—Ç—å —É–º–æ–ª—è–µ—Ç."
    ]
}

@dp.message_handler(commands=['start', 'play'])
async def cmd_start(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    kb.add("‚ù§Ô∏è –õ—ë–≥–∫–∏–π", "üî• –ö–æ–Ω—Ç—Ä–æ–ª—å", "üòà –ü—Ä–µ–¥–µ–ª", types.KeyboardButton("/stop"))
    await message.answer("–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã:", reply_markup=kb)

@dp.message_handler(lambda m: m.text in tasks)
async def send_task(message: types.Message):
    task = random.choice(tasks[message.text])
    await message.answer(f"üé≤ –ó–∞–¥–∞–Ω–∏–µ:\n{task}\n\nüëâ /play ‚Äî –µ—â—ë, /stop ‚Äî –∑–∞–∫–æ–Ω—á–∏—Ç—å")

@dp.message_handler(commands=['stop'])
async def cmd_stop(message: types.Message):
    await message.answer("‚õî –ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –¥—Ä—É–≥ –¥—Ä—É–≥–æ–º ‚ù§Ô∏è")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
